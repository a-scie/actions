name: Prepare Changelog
description: Prepares the changelog for a release.
inputs:
  changelog-file:
    description: The path to the changelog markdown file to operate on.
    required: true
  version:
    description: The version to prepare the changelog for.
    required: true
  level:
    description: The level of the version headings in the changelog markdown.
    required: false
    default: 2
  setup-python:
    description: Whether to setup a Python interpreter or just use an ambient one.
    required: false
    default: true
outputs:
  changelog-file:
    description: The path to a changelog file with just the specified version's section.
    value: ${{ steps.prepare-changelog.outputs.changelog-snippet-path }}
runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      # N.B.: All inputs are strings despite what it may look like:
      #   https://github.com/actions/runner/issues/1483
      if: ${{ inputs.setup-python == 'true' }}
      with:
        python-version: 3.11
    - name: Calculate Tox Version
      id: calculate-tox-info
      shell: python
      run: |
        import os
        from configparser import ConfigParser


        # N.B.: A raw string is critical to support literal `\` in Windows paths.
        tox_config = os.path.normpath(os.path.join(r"${{ github.action_path }}", "..", "tox.ini"))
        cp = ConfigParser()
        with open(tox_config) as fp:
            cp.read_file(fp)
        tox_min_version = cp.get("tox", "minversion")
        with open(os.environ["GITHUB_OUTPUT"], "a") as gh_output_fp:
            print(f"tox-min-version={tox_min_version}", file=gh_output_fp)
            print(f"tox-config={tox_config}", file=gh_output_fp)
    - name: Prepare Changelog
      id: prepare-changelog
      shell: bash
      run: |
        # Handle Windows paths for bash, assume \ will only be present as Windows path separators.
        runner_temp="${RUNNER_TEMP//\\//}"
        tox_config='${{ steps.calculate-tox-info.outputs.tox-config }}'
        tox_config="${tox_config//\\//}"

        venv_dir="$(TMPDIR="${runner_temp}" mktemp -d)"
        python -mvenv "${venv_dir}"
        if [[ "$(uname -s)" =~ _NT ]]; then
          # Git bash reports something like: MINGW64_NT-10.0-22621
          source "${venv_dir}/Scripts/activate"

        else
          source "${venv_dir}/bin/activate"
        fi
        python -mpip install -U pip
        pip install 'tox==${{ steps.calculate-tox-info.outputs.tox-min-version }}'
        changelog_snippet_path="$(TMPDIR="${runner_temp}" mktemp)"
        cat <<EOF > "${changelog_snippet_path}" 
        ---

        $(
          tox -c "${tox_config}" -e changelog -qq -- \
            --changelog ${{ inputs.changelog-file }} \
            --level ${{ inputs.level }} \
            ${{ inputs.version }}
        )
        EOF
        echo "changelog-snippet-path=${changelog_snippet_path}" >> $GITHUB_OUTPUT

